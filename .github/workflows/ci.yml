name: HashCSP CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'

permissions:
  contents: read
  issues: read
  checks: read
  pull-requests: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run Ruff (linting)
        run: poetry run ruff check .

      - name: Run isort (import sorting)
        run: poetry run isort --check-only --diff .

      - name: Run Black (formatting)
        run: poetry run black --check .

      - name: Run mypy (type checking)
        run: poetry run mypy hashcsp tests

  test-poetry:
    name: Test with Poetry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # for Codecov upload
    strategy:
      matrix:
        python-version: ['3.12', '3.13']
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run tests
        run: poetry run pytest -v --cov=hashcsp --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
        if: matrix.python-version == '3.12'

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-root

      - name: Install safety
        run: pip install safety

      - name: Run safety (dependency vulnerability scan)
        run: poetry run safety check --full-report

      - name: Install detect-secrets
        run: pip install detect-secrets

      - name: Run detect-secrets (secret scanning)
        run: detect-secrets scan --baseline .detect-secrets.json || true
        continue-on-error: true

  publish:
    name: Publish to PyPI and GitHub Release
    needs: [lint, test-poetry, security]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating GitHub Releases
      #id-token: write  #  for potential PyPI OIDC publishing
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for changelog

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build package
        run: poetry build

      #   - name: Publish to PyPI
      #     env:
      #       POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      #     run: poetry publish --no-interaction

      - name: Generate changelog
        id: changelog
        uses: orhun/git-cliff-action@v3
        with:
          config: cliff.toml
          args: --latest --strip all
        env:
          OUTPUT: CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          body_path: CHANGELOG.md
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
